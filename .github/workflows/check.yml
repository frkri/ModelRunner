name: Check ModelRunner

on:
  pull_request:
  push:
    branches:
      - master
  workflow_call:

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Format & Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache sqlx-cli binary
        id: sqlx-cli-cache
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/sqlx
          key: ${{ runner.os }}-sqlx-cli-sqlite

      - name: Install sqlx-cli
        if: ${{ steps.sqlx-cli-cache.outputs.cache-hit != 'true' }}
        run: cargo install sqlx-cli --no-default-features --features sqlite

      - run: |
          chmod +x ~/.cargo/bin/sqlx
          echo ~/.cargo/bin >> $GITHUB_PATH

      - name: Setup sqlx
        env:
          DATABASE_URL: sqlite://model_runner_check.db
        run: sqlx db setup

      - name: Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Fmt
        run: cargo fmt --all -- --check

      - name: Clippy
        env:
          DATABASE_URL: sqlite://model_runner_check.db
        run: cargo clippy --all-targets --all-features -- -D warnings
