# Base deployment config
name: model_runner_service

services:
  modelrunner:
    # Find other image types under: https://github.com/frkri/ModelRunner/pkgs/container/modelrunner
    image: ghcr.io/frkri/modelrunner:latest
    container_name: modelrunner
    build:
      context: ../
      dockerfile: Dockerfile
    ports:
      - "25566:25566"
    healthcheck:
      test: [
          "CMD",
          "/ModelRunner/model_runner_health",
          "http://localhost:25566/health", # Make sure to change the port and protocol (https / http) to match your setup
        ]
      start_period: 5s
      interval: 30s
      timeout: 15s
      retries: 3
    environment:
      - SQLITE_FILE_PATH=/ModelRunner/db/model_runner.db
      - HF_HOME=/ModelRunner/hf-cache
      - ADDRESS=0.0.0.0
      - PORT=25566
      # - OTEL_ENDPOINT=http://otel-collector:4317 # Exports telemetry data to the specified endpoint, use in combination with telemetry compose file
      # - CONSOLE=true # When set to true, the logs will always be printed to the console regardless of the OTEL_ENDPOINT being set or not
      # - TRACE_LOCAL=true # Rather than sending telemetry data to the OTEL_ENDPOINT this will store traces in a local file
      # - CONFIG_FILE=/ModelRunner/ModelRunner.toml
      # - CERTIFICATE=/run/secrets/cert-file
      # - PRIVATE_KEY=/run/secrets/key-file
    volumes:
      - /var/cache/hf-cache:/ModelRunner/hf-cache # Cache dir for the downloaded files (models and other files) from Hugging Face, to be used with the HF_HOME environment variable
      - /var/lib/model-runner:/ModelRunner/db # Database dir for the SQLite database file, to be used with the SQLITE_FILE_PATH environment variable
    networks:
      - mesh
    labels: # Additional labels for other services
      - "com.centurylinklabs.watchtower.scope=modelrunner"
      - "traefik.enable=true"
      - "traefik.http.routers.modelrunner.entrypoints=web"
      - "traefik.http.routers.modelrunner.rule=Host(`modelrunner.localhost`) || PathPrefix(`/modelrunner`)"
    # configs:
    #  - source: model_runner_config
    #    target: /ModelRunner/ModelRunner.toml
    # secrets:
    #  - cert-file
    #  - key-file

# Use the following to mount the config file rather than using environment variables. See https://docs.docker.com/compose/compose-file/08-configs/
configs:
  model_runner_config:
    file: ./path/to/your/config.toml

secrets:
  cert-file:
    file: ./path/to/your/cert.file
  key-file:
    file: ./path/to/your/key.file

networks:
  mesh:
